<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title/>
  <subtitle/>
  <id>http://blog.segiddins.me/</id>
  <link href="http://blog.segiddins.me/"/>
  <link href="http://blog.segiddins.me/rss" rel="self"/>
  <updated>2024-02-09T20:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Residency Update</title>
    <link rel="alternate" href="http://blog.segiddins.me/2024/02/09/residency-update/"/>
    <id>http://blog.segiddins.me/2024/02/09/residency-update/</id>
    <published>2024-02-09T20:00:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Welcome to my third update as &lt;a href="https://rubycentral.org/news/ruby-central-welcomes-new-software-engineer-in-residence-sponsored-by-aws/"&gt;Ruby Central&amp;rsquo;s security engineer in residence, sponsored by AWS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My goal is to write a short update every week, chronicling what I&amp;rsquo;ve been working on, and reminding myself that I was, in fact, productive.&lt;/p&gt;

&lt;p&gt;This week, I wrapped up the event logging feature, and got the gem research tool to a point where it&amp;rsquo;s useful for me.&lt;/p&gt;



&lt;h2 id="event-logging"&gt;Event Logging&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m planning to roll out event logging later today! It&amp;rsquo;ll be a soft launch, as I want to make sure that the data is being collected correctly before we start advertising the feature to users.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m excited to build on this foundation and add more event types in the future.&lt;/p&gt;

&lt;h2 id="gem-research-tool"&gt;Gem Research Tool&lt;/h2&gt;

&lt;p&gt;What a fun rabbit hole! I ran out of disk space a few times, OOM&amp;rsquo;d a 96GB RAM machine, and cursed a fair amount.
After concluding that doing all the ingestion in Ruby (and using activerecord) was too slow, I wrote a golang script to do it for me.
Then I decided to implement it in Rust, so I could easily call it from ruby, but that was slower than go.
So I went back to go, got things fast enough, and then ran out of disk space and RAM a few more times.
If I happen to be awake, &lt;a href="https://rubygems-research.folk-dinosaur.ts.net"&gt;https://rubygems-research.folk-dinosaur.ts.net&lt;/a&gt; should let you browse around (the app is still hosted on my local machine, as attached block storage large enough to fit the entire corpus of gems is expensive on cloud providers).
This should be pushed up to GitHub soon, and I&amp;rsquo;ll probably publish it as a gem, because why not.
The team is also excited to use this as a playground for features that we want to expose to the public eventually, like browsing gem contents and being able to query random things (like how many empty files are packed into gems: over 18 million, or how many libxml binaries are published: querying this is too slow and I&amp;rsquo;m lazy, but I have the 180 million row table to make it possible!)&lt;/p&gt;

&lt;h2 id="other-stuff"&gt;Other Stuff&lt;/h2&gt;

&lt;p&gt;My dad has been in town this week after we went to a concert in Santa Monica last weekend, so this update is a bit short. I tried to focus on those two big things, and next week I should be able to start turning my attention to something new!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Residency Update</title>
    <link rel="alternate" href="http://blog.segiddins.me/2024/02/02/residency-update/"/>
    <id>http://blog.segiddins.me/2024/02/02/residency-update/</id>
    <published>2024-02-02T20:00:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Welcome to my second (very late to be published) update as &lt;a href="https://rubycentral.org/news/ruby-central-welcomes-new-software-engineer-in-residence-sponsored-by-aws/"&gt;Ruby Central&amp;rsquo;s security engineer in residence, sponsored by AWS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My goal is to write a short update every week, chronicling what I&amp;rsquo;ve been working on, and reminding myself that I was, in fact, productive.&lt;/p&gt;

&lt;p&gt;This week, I focused on addressing some inbound security reports, wrapped up feature work on event logging, and started building a new tool to assist me in researching the gems that are a part of our ecosystem.&lt;/p&gt;



&lt;h2 id="security-reports"&gt;Security Reports&lt;/h2&gt;

&lt;p&gt;Can&amp;rsquo;t share the details here yet until the reports are disclosed, but trust me that I did work in this area.&lt;/p&gt;

&lt;h2 id="event-logging"&gt;Event Logging&lt;/h2&gt;

&lt;p&gt;Event logging is basically feature complete! In fact, the &lt;a href="https://github.com/rubygems/rubygems.org/pull/4406"&gt;models are already in production&lt;/a&gt;.
You can see some screenshots linked on the &lt;a href="https://github.com/rubygems/rubygems.org/pull/4367"&gt;massive PR&lt;/a&gt;.
Not too much to say here outside of what&amp;rsquo;s in the PR. I&amp;rsquo;ll write up the feature on the RubyGems blog once it&amp;rsquo;s live.&lt;/p&gt;

&lt;h2 id="component-previews"&gt;Component Previews&lt;/h2&gt;

&lt;p&gt;Now that I&amp;rsquo;ve been working on RubyGems.org for a while, I finally got around to making it slightly easier to build UI.
As a part of my event logging work, I &lt;a href="https://github.com/rubygems/rubygems.org/pull/4407"&gt;set up a component preview system using lookbook&lt;/a&gt;, which is a way to see what a component looks like in isolation from the rest of the app. This is a big win for me, as it makes it easier to iterate on UI changes without needing to navigate through the app to see them.
Selfishly, it&amp;rsquo;s also helpful because it&amp;rsquo;s an easy way to get code coverage on my Phlex components.&lt;/p&gt;

&lt;h2 id="gem-research-tool"&gt;Gem Research Tool&lt;/h2&gt;

&lt;p&gt;As part of my role as a security engineer, I need to be able to quickly research the gems that are a part of our ecosystem. I started building a tool to help me do that, and it&amp;rsquo;s already been helpful in my work. It&amp;rsquo;s a rails app backed by a sqlite database that ingests data both from the &lt;a href="https://rubygems.org/pages/data"&gt;rubygems.org data dumps&lt;/a&gt; as well as directly from all the .gem files hosted on rubygems.org. This was a fun rabbit hole to hack on, and it already paid dividends while addressing some of the security reports that came in this week.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Residency Update</title>
    <link rel="alternate" href="http://blog.segiddins.me/2024/01/26/residency-update/"/>
    <id>http://blog.segiddins.me/2024/01/26/residency-update/</id>
    <published>2024-01-26T20:00:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Welcome to my first (very late to be published) update as &lt;a href="https://rubycentral.org/news/ruby-central-welcomes-new-software-engineer-in-residence-sponsored-by-aws/"&gt;Ruby Central&amp;rsquo;s security engineer in residence, sponsored by AWS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My goal is to write a short update every week, chronicling what I&amp;rsquo;ve been working on, and reminding myself that I was, in fact, productive.&lt;/p&gt;

&lt;p&gt;This week, I focused on updating rubygems.org&amp;rsquo;s rack to v3 and rails defaults to 7.1, as well as kicking work on the security events log into high gear.&lt;/p&gt;



&lt;h2 id="rack-upgrade"&gt;Rack Upgrade&lt;/h2&gt;

&lt;p&gt;That this upgrade was difficult was entirely self-inflicted. Rack 3 &lt;a href="#"&gt;optimized parsing of form keys&lt;/a&gt;, which broke some custom form shenanigans I had done on our admin dashboard. I spent a while trying to fix it in a more rails-y way, but &lt;a href="#"&gt;monkey patching&lt;/a&gt; was easiest solution.&lt;/p&gt;

&lt;h2 id="rails-7-1-framework-defaults"&gt;Rails 7.1 Framework Defaults&lt;/h2&gt;

&lt;p&gt;We upgraded to Rails 7.0 a while back, and Rails 7.1 this past month, so it was just a bit of cleanup work to update to the newer framework defaults.
This is regular maintenance, but it&amp;rsquo;s important to keep up with the latest versions of the frameworks we use.&lt;/p&gt;

&lt;h2 id="soft-deleting-users"&gt;Soft-Deleting Users&lt;/h2&gt;

&lt;p&gt;This has been on our wish list for a while. Not many users end up deleting their accounts, when they did, it made it hard to track what they had done. We&amp;rsquo;re now &lt;a href="https://github.com/rubygems/rubygems.org/pull/4376"&gt;soft-deleting users&lt;/a&gt;, which means they&amp;rsquo;re not actually deleted from the database, but are marked as deleted (and all personal information overwritten). This is largely an internal change, but it helps make the next feature far more useful.&lt;/p&gt;

&lt;h2 id="security-events-log"&gt;Security Events Log&lt;/h2&gt;

&lt;p&gt;This is the big thing I&amp;rsquo;ve been working on. I spent a bunch of time refactoring, and think I&amp;rsquo;ve landed on a solution that isn&amp;rsquo;t too much code, and isn&amp;rsquo;t too much magic either. As things stand now, stuff is pretty well DRY&amp;rsquo;d up between events on gems &amp;amp; events on users, so I&amp;rsquo;m reasonably happy.&lt;/p&gt;

&lt;p&gt;Along with the feature work here, I ended up implementing support for viewing them in our admin dashboard, as well as further introducing the use of components to our rails views (which I&amp;rsquo;m a big fan of).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Nostalgia</title>
    <link rel="alternate" href="http://blog.segiddins.me/2022/10/23/nostalgia/"/>
    <id>http://blog.segiddins.me/2022/10/23/nostalgia/</id>
    <published>2022-10-23T20:45:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I&amp;rsquo;m in a window seat, at 36,000 feet, and just finished up my free mini bottle of buffalo trace. Years ago, this was my happy place. Flying somewhere, leaving some place, being treated like someone special because I spent so much damn time and dollars for the right to sit on an airplane as it took me from point A to point B.&lt;/p&gt;

&lt;p&gt;Sure, I&amp;rsquo;ve been a United 1K for half a decade at this point. Racked up almost half a million millions flown in the past 6 years. But it was more than that. I was a &lt;strong&gt;frequent flier&lt;/strong&gt;, damnit. I could navigate airports with my eyes closed, could tell you the best seat on every plane in UA&amp;rsquo;s fleet. Hell, I called United Airlines &amp;ldquo;UA&amp;rdquo;, because that showed how much of an insider I was.&lt;/p&gt;

&lt;p&gt;Now, we&amp;rsquo;re several years and one giant global pandemic later. The world&amp;rsquo;s been turned on its head so many times over the past two and a half years, I can&amp;rsquo;t even remember if it&amp;rsquo;s currently upside-down or rightside-up. And here I am, sitting in seat 10F (have booked 10D, don&amp;rsquo;t ask questions), having consumed my in-flight freebies, and &amp;hellip;&amp;hellip; it&amp;rsquo;s not the same.&lt;/p&gt;

&lt;p&gt;Shocker.&lt;/p&gt;



&lt;p&gt;Flying was my personality. It was my schtick. &amp;ldquo;I spent a night in the Singapore airport working, and downing an entire bottle of champagne while sitting alone in the business class lounge&amp;rdquo; was not only a true statement, but a point of pride. It was how I introduced myself. It was my dating app profile. &amp;ldquo;I took a spring break in Hong Kong just to eat dumplings&amp;rdquo; was true. And I fucking loved that spring break!&lt;/p&gt;

&lt;p&gt;And here I am, having flown SFO-NYC two weekends in a row for two different weddings. The travel used to be part of the fun. Enjoying the journey as much as the destination. You know the cliches. But, at least for a lot of the travel I&amp;rsquo;ve done this year, that&amp;rsquo;s been gone. Few upgrades. Chaos in airports. Ticket prices doubling verses the baselines I had memorized. Seatmates not wearing masks. Middle seats having people in them. My favorite flight times no longer on the schedule.&lt;/p&gt;

&lt;p&gt;The spontaneity is gone. The absurd is gone. Chasing the sun in a lie-flat seat is&amp;hellip; gone. The last trip I had scheduled, before the world shut down, was supposed to be vacationing in Sicily with my mom. Of course, I was going to get to Italy from San Francisco via Toronto, Mumbai, and Geneva. I loved it. Arbitrage opportunities for earning status, a silly amount of time spent in business class, just being &lt;em&gt;absurd&lt;/em&gt; about flying. Saying &amp;ldquo;sign me up&amp;rdquo; doesn&amp;rsquo;t cover it &amp;ndash; I didn&amp;rsquo;t need convincing. I sought it out. And me being me, I consistently found it.&lt;/p&gt;

&lt;p&gt;And now&amp;hellip; who knows if I can do that again. Remote work makes it harder to just disappear for a conference and say it&amp;rsquo;s all work (yes, it is all work); now I&amp;rsquo;m expected to be on Zoom and Slack constantly, even if I&amp;rsquo;m 9 time zones away and just spent 20 hours in transit. That&amp;rsquo;s not relaxing. It&amp;rsquo;s also not conducive to randomly finding Michelin star restaurants in &lt;em&gt;insert city here&lt;/em&gt; to walk into for lunch. Besides, half the places I loved to do that in have been off limits until the past few weeks.&lt;/p&gt;

&lt;p&gt;To top it all off, for whatever reason I have utterly failed at taking time off the past few years. Yeah, I was bad before. But now? Why take a day off to ski when I can take meetings from the slopes. Why take an extra day when going to a conference when I can be home in time to open my laptop and call into sprint planning? Seriously, why???&lt;/p&gt;

&lt;p&gt;So, to tie it all into the title that I penned in my mind before opening my laptop, I think I&amp;rsquo;m nostalgic for a life I had. I&amp;rsquo;m fighting internally against the idea of giving up on being the jetsetter, the mile-chaser, the guy who flew a bunch and fucking loved it. Because I loved it. I want to find a way to recapture that love of showing up to SFO hours early for a transcon to get a free meal and drink in the lounge, or spending a weekday going out of my way to LAX or IAH to secure double-digit hours in a business class seat upgraded with PlusPoints. That shit was so fucking fun!&lt;/p&gt;

&lt;p&gt;Do I know how I&amp;rsquo;m going to go back to it? No. But I&amp;rsquo;m working on it.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>What I Value</title>
    <link rel="alternate" href="http://blog.segiddins.me/2020/12/23/what-i-value/"/>
    <id>http://blog.segiddins.me/2020/12/23/what-i-value/</id>
    <published>2020-12-23T09:45:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I’ve spent a lot of this year thinking. I think most people have.&lt;/p&gt;

&lt;p&gt;I was sending some random tweets to a friend last week, and I captioned the exchange by saying &amp;ldquo;&amp;hellip; I think this year has made me, and there’s no other way to put it, insufferably Jewish&amp;rdquo;. (Now, I know I’ve always been insufferable. I was merely commenting on the nature of the insufferability these days). He responded by first assuring me, &amp;ldquo;that’s not a bad thing&amp;rdquo; (which is how you can tell he is, indeed, one of my Jewish friends). Next, he said something that’s made me reflect a lot, that &amp;ldquo;a lot of this year has been identifying what you value&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;What do I value?&lt;/p&gt;



&lt;p&gt;My family, certainly. A nice glass of scotch after a cold day, sure. My work, maybe (I value being &lt;em&gt;good&lt;/em&gt; at what I do more than doing it, if that makes any sense).&lt;/p&gt;

&lt;p&gt;Me, though? Do I value myself? Of course, if asked, I would’ve said yes. But I don’t think I truly valued myself as much as I should. And I think a big part of that was not having a &lt;em&gt;way&lt;/em&gt; to value myself. A framework, if you will.&lt;/p&gt;

&lt;p&gt;One of the ways I’ve found to value myself, and figure out how I fit into the world, has been embracing being a Jew. One of the morning brachot says &amp;ldquo;baruch atah hashem, she’asani yisrael&amp;rdquo; &amp;ndash; I wake up thankful to be a Jew. But what does that mean in 2020, in San Francisco?&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Time for a little aside.&lt;/p&gt;

&lt;p&gt;For almost 20 years, I have brushed aside the notion of prayer.
Why should I pray, when I don’t really believe that there’s an audience for those prayers?
Cue something like a decade of cynicism.&lt;/p&gt;

&lt;p&gt;I intentionally stopped attending Hebrew School immediately after becoming bar mitzvah.
I was suspicious of the number of in-groups the synagogue had.
I heard so many Jewish friends deride anyone who became &amp;ldquo;more observant&amp;rdquo;.
I thought every form of observance was an obstacle to living a &amp;ldquo;normal&amp;rdquo; life.&lt;/p&gt;

&lt;p&gt;Fast forward to 2016.&lt;/p&gt;

&lt;p&gt;I started traveling, an in particular, that year I went to Berlin, Amsterdam, Prague, and Budapest.
All cities that used to have robust &amp;amp; beautiful Jewish populations.
Cities where the Jews were wiped out in the Shoah.
Where the only remains of Jewish life are synagogues turned into museums, devoid of their congregants.&lt;/p&gt;

&lt;p&gt;Those trips stirred something inside me.
Tears, certainly, but the haunting beauty of the old synagogues stayed with me.
I returned back home to Chicago, attended High Holy Day services at the local shul, and that was it.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;In the lead up to this year’s days of awe, I spent some time listening to some talks put out by the synagogue I’d attended the year prior. (I jotted down some ramblings at the time, both &lt;a href="https://gist.github.com/segiddins/534c029d11d27774ae2e9851513d6cf4"&gt;prior to Rosh Hashanah&lt;/a&gt; and &lt;a href="https://gist.github.com/segiddins/e14f9d18eab42ad463c6e6b3a659379c"&gt;right before Yom Kippur&lt;/a&gt;.)
One week, the focus was on the Unetanneh Tokef. Particularly the conclusion.
U t’shuva, u tefillah, u tzedakah ma’avirin et-roa hagzerah.
But t’shuva, tefillah, and tzedakah can transform (or temper) the harshness of the decree.&lt;/p&gt;

&lt;p&gt;I’ll skip the (very interesting!) debate about how exactly that’s supposed to work.
But one explanation has stuck with me, months after the close of the gates on neilah.
It is the idea that &lt;em&gt;the acts&lt;/em&gt; of t’shuva, tefillah, and tzedakah change &lt;em&gt;us&lt;/em&gt;, transform us.&lt;/p&gt;

&lt;p&gt;And that’s the first explanation of prayer, tefillah, that has resonated with me.
Why pray, if I don’t believe it can change the world around me?
Because I know for certain that it can change me.&lt;/p&gt;

&lt;p&gt;We repeat the same prayers over and over, every day, every week.
When I was younger, I found the repetition to be rote.
Now, I draw comfort from it, the same comfort you feel when wrapping youself in the hug of a tallit.
The words, the melodies, the sheer familiarity helps focus kavanah, intention.
The intention to really think about family members who are sick as I pray for healing.
The intention to be able to pray the words of my heart, even if they’re not written down in the siddur.
The intention to want to be myself, the best version of myself, the only version of myself.&lt;/p&gt;

&lt;p&gt;Because there is no version of me who is not a Jew.
There is no part of me that can’t appreciate the magic of Shabbat as it rolls around, every single week.
There is no part of me that does not weep and mourne for the thousands of years of trauma our people have endured.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;This year, I hosted my own Seder for the first time.
I hosted my own Rosh Hashanah dinner for the first time.
(Both meals I cooked for 10. There is no other way to do a holiday meal).
I started attending Kabbalat Shabbat services weekly at one synagogue.
I called into Havdallah weekly with a &lt;em&gt;different&lt;/em&gt; shul.
Attended high holy day services on my own, from my living room.
I blew my own shofar (sorry, neighbors!)
I read Jewish books, listened to Jewish music, made Jewish tweets.&lt;/p&gt;

&lt;p&gt;In a year that&amp;rsquo;s seen so much turned upside-down, this is where I found comfort.
This is what my actions say I valued.
This is what I valued.
This is who I was.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Why even bother writing this down?&lt;/p&gt;

&lt;p&gt;Because I want to proudly &amp;amp; openly embrace this facet of myself.
Because I want to undo the decade of distance I forced upon myself.
Because, like prayer, the point is to transform myself, into the person I want to be.
And saying it out loud is just a part of how that works.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>This time, it was a compiler bug</title>
    <link rel="alternate" href="http://blog.segiddins.me/2020/04/15/this-time-it-was-a-compiler-bug/"/>
    <id>http://blog.segiddins.me/2020/04/15/this-time-it-was-a-compiler-bug/</id>
    <published>2020-04-16T01:00:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I write software for a living. At least, I pretend to. Most of the time, my job is building &amp;amp; running (&amp;amp; yes, occasionally fixing) software other people have written.&lt;/p&gt;

&lt;p&gt;One of the aphorisms of software development is that &amp;ldquo;it&amp;rsquo;s never a compiler error&amp;rdquo;. Sure, it&amp;rsquo;s not &lt;em&gt;never&lt;/em&gt; a compiler error, since compilers are written by humans and therefore are as flawed as any other piece of software. But it&amp;rsquo;s &lt;em&gt;never&lt;/em&gt; a compiler error, in the sense that, when you find a bug, the probability of it being caused by a compiler error exists on a set of measure zero.&lt;/p&gt;

&lt;p&gt;Well, today I hit the jackpot. This time, it really was a compiler bug.&lt;/p&gt;

&lt;p&gt;Almost.&lt;/p&gt;



&lt;p&gt;At work, we&amp;rsquo;re fortunate to have a bunch of tests.
I&amp;rsquo;m unfortunate in that my job is essentially to make sure we run those tests.&lt;/p&gt;

&lt;p&gt;A (somewhat) common pattern we have is to have test cases initialize a test fixture at the start of each test method,
and at the end &lt;code&gt;nil&lt;/code&gt; out the fixture and make sure it was deallocated. Makes sense, right? We want to make sure we&amp;rsquo;re not leaking objects over into the next test.&lt;/p&gt;

&lt;p&gt;That pattern looks a little something like this:&lt;/p&gt;
&lt;pre class="highlight objective_c"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="n"&gt;Foundation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="n"&gt;XCTest&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@interface&lt;/span&gt; &lt;span class="nc"&gt;TestFixture&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;NSObject&lt;/span&gt;
&lt;span class="k"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instancetype&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;testFixtureForCountryCode&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="n"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instancetype&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;initWithCountryCode&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="n"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;BOOL&lt;/span&gt; &lt;span class="n"&gt;otherParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@end&lt;/span&gt;

&lt;span class="k"&gt;@implementation&lt;/span&gt; &lt;span class="nc"&gt;TestFixture&lt;/span&gt;
&lt;span class="k"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instancetype&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;testFixtureForCountryCode&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="n"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt; &lt;span class="nf"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nf"&gt;initWithCountryCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instancetype&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;initWithCountryCode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt; &lt;span class="nf"&gt;initWithCountryCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="nf"&gt;otherParam&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;YES&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instancetype&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;initWithCountryCode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="n"&gt;otherParam&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;otherParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;super&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_otherParam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;otherParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;tearDown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// do stuff
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;dealloc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@end&lt;/span&gt;

&lt;span class="k"&gt;@interface&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;XCTestCase&lt;/span&gt;
&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;span class="k"&gt;@implementation&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;
&lt;span class="k"&gt;@end&lt;/span&gt;

&lt;span class="k"&gt;@interface&lt;/span&gt; &lt;span class="nc"&gt;Tests&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;XCTestCase&lt;/span&gt;
&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;TestFixture&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;testFixture&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@end&lt;/span&gt;

&lt;span class="k"&gt;@implementation&lt;/span&gt; &lt;span class="nc"&gt;Tests&lt;/span&gt;
&lt;span class="k"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;super&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;testFixture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TestFixture&lt;/span&gt; &lt;span class="nf"&gt;testFixtureForCountryCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@"en_US"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;testFixture&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;__weak&lt;/span&gt; &lt;span class="n"&gt;__typeof__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;testFixture&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;weakTestFixture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;testFixture&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;testFixture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;XCTAssertNil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weakTestFixture&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;@"Expected thing to be nil"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;super&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;test_empty&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;test_empty2&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We&amp;rsquo;ve had tests that have been doing that for years. They&amp;rsquo;ve been passing. Until now.
When we&amp;rsquo;ve been switching to &lt;a href="https://bazel.build/"&gt;Bazel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After months of painstaking work, we&amp;rsquo;ve got our apps building, and most of our tests building,
and almost most of them passing.&lt;/p&gt;

&lt;p&gt;Except for some tests that use test fixtures. And assert that those test fixtures get deallocated.
And they passed in Xcode. And failed when run via Bazel.&lt;/p&gt;

&lt;p&gt;Queue three days of chasing my tail, adding hundreds of random print statements to chase down these bugs.
Yesterday, I fixed a bug around using &lt;code&gt;+[NSHashTable weakObjectsHashTable]&lt;/code&gt; (turns out, you &lt;strong&gt;really&lt;/strong&gt; want &lt;code&gt;NSMapTableObjectPointerPersonality&lt;/code&gt; instead of &lt;code&gt;NSPointerFunctionsObjectPersonality&lt;/code&gt; when you&amp;rsquo;re potentially storing multiple proxy objects that compare equal and want them all to receive delegate callbacks. Anyways.)
I thought that was going to be the worst of it.&lt;/p&gt;

&lt;p&gt;It, of course, wasn&amp;rsquo;t, because that bug on its own doesn&amp;rsquo;t warrant a blog post.&lt;/p&gt;

&lt;p&gt;The code above was failing in Bazel. It passed when I used &lt;code&gt;alloc init&lt;/code&gt; directly, instead of the factory class method to create the test fixture.
It passed when I moved the allocation and assignment into an &lt;code&gt;@autorelease&lt;/code&gt; block.
It passed the smell test when I popped the binary into Hopper and started reading decompiled methods.&lt;/p&gt;

&lt;p&gt;But it failed as written. And I was determined to get to the bottom of things.&lt;/p&gt;

&lt;p&gt;Guessing that something was maybe up around autoreleases, I looked at the dissassembly, instead of Hopper&amp;rsquo;s (amazing) decompiler view.
I remembered, thanks to an old &lt;a href="https://www.mikeash.com/pyblog/friday-qa-2014-05-09-when-an-autorelease-isnt.html"&gt;Mike Ash article&lt;/a&gt; from back in the day,
that the modern ObjC runtime does some (extra) magic around autoreleasing values.&lt;/p&gt;

&lt;p&gt;The (working) code ends up compiling to something like this in Xcode:&lt;/p&gt;
&lt;pre class="highlight objective_c"&gt;&lt;code&gt;&lt;span class="k"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;testFixtureForCountryCode&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;arg2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;var_18&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;objc_storeStrong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;var_18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;var_30&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt; &lt;span class="nf"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nf"&gt;initWithCountryCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;var_18&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;objc_storeStrong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;var_18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;rax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;var_30&lt;/span&gt; &lt;span class="nf"&gt;autorelease&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;rax&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;whereas from Bazel it&amp;rsquo;s getting compiled down to:&lt;/p&gt;
&lt;pre class="highlight objective_c"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* @class TestFixture */&lt;/span&gt;
&lt;span class="k"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;testFixtureForCountryCode&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;arg2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;var_8&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;___stack_chk_guard&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;var_10&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;objc_storeStrong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;var_10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;var_28&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt; &lt;span class="nf"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nf"&gt;initWithCountryCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;var_10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;objc_storeStrong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;var_10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;var_30&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;var_28&lt;/span&gt; &lt;span class="nf"&gt;autorelease&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;___stack_chk_guard&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;var_8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;rax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;var_30&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;rax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__stack_chk_fail&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;rax&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;___stack_chk_guard&lt;/code&gt;? &lt;code&gt;__stack_chk_fail&lt;/code&gt;? What is that stuff? Initially, I ignored them since they seemed inconsequential to the program&amp;rsquo;s control flow.&lt;/p&gt;

&lt;p&gt;But, going back to that discussion of &lt;code&gt;objc_retainAutoreleaseReturnValue&lt;/code&gt; and &lt;code&gt;objc_autoreleaseReturnValue&lt;/code&gt;, and keeping in the back of my head that they inspected the calling code&amp;rsquo;s following instructions, I started hunting for differences in the &lt;code&gt;clang&lt;/code&gt; invocations between Xcode and Bazel.&lt;/p&gt;

&lt;p&gt;After a lot of sorting, I had a culprit. &lt;code&gt;-fstack-protector&lt;/code&gt;. It seemed so innocent. Protecting the stack sounds good! The &lt;a href="https://clang.llvm.org/docs/ClangCommandLineReference.html"&gt;clang command line reference&lt;/a&gt; only says that &lt;code&gt;-fstack-protector&lt;/code&gt; will &lt;code&gt;enable stack protectors for some functions vulnerable to stack smashing&lt;/code&gt;. That doesn&amp;rsquo;t at all sound destructive!&lt;/p&gt;

&lt;p&gt;However, due to the way the stack protector works (by adding instructions at the start and end of function), they can interfere with a call to &lt;code&gt;objc_autoreleaseReturnValue&lt;/code&gt; being able to see it&amp;rsquo;s matching call to &lt;code&gt;objc_retainAutoreleaseReturnValue&lt;/code&gt;, and then &lt;code&gt;[object autorelease]&lt;/code&gt; will actually have to do an autorelease. Which means that the object will go into the autoreleasepool. And it won&amp;rsquo;t be deallocated until that pool drains. And &lt;code&gt;XCTestCase&lt;/code&gt;&amp;lsquo;s &lt;code&gt;-setUp&lt;/code&gt; and &lt;code&gt;-tearDown&lt;/code&gt; methods happen inside the same autoreleasepool.&lt;/p&gt;

&lt;p&gt;Boom. Bug.&lt;/p&gt;

&lt;p&gt;Objects here really &lt;em&gt;were&lt;/em&gt; living longer under Bazel than they were in Xcode, since autoreleased objects were actually being autoreleased (and subsequently retained), instead of ending up skipping both the autorelease and the retain (&lt;code&gt;init&lt;/code&gt; methods return already-retained objects).&lt;/p&gt;

&lt;p&gt;Now that we&amp;rsquo;re all caught up and fully understand the bug (and have spent enough time saying &amp;ldquo;what the&amp;hellip;&amp;rdquo; to an empty room to calm down), there are a couple of obvious solutions. The first is to, you know, write correct code. If we want to test that objects aren&amp;rsquo;t participating in an accidental retain cycle, we need to make sure that their creation happens inside an autoreleasepool that&amp;rsquo;s drained by the desired end of that objects lifetime. Moving the &lt;code&gt;self.testFixture = ...&lt;/code&gt; initialization &amp;amp; assignment inside of an &lt;code&gt;@autoreleasepool&lt;/code&gt; block will do just that for us.
And the second is to make our migration easier, by not passing &lt;code&gt;-fstack-protector&lt;/code&gt; in the new build system, when it wasn&amp;rsquo;t passed in the old build system. (Or, in the case of bazel, to pass &lt;code&gt;--per_file_copt=&amp;quot;.*\.m&amp;quot;,&amp;quot;@-fno-stack-protector&amp;quot;&lt;/code&gt; on the command line, since there&amp;rsquo;s no way to get it to stop passing &lt;code&gt;-fstack-protector&lt;/code&gt; and there&amp;rsquo;s no other way to sneak my &lt;code&gt;-fno-&lt;/code&gt; flag in after Bazel&amp;rsquo;s flag gets added.)&lt;/p&gt;

&lt;p&gt;What made this bug so fun (and infuriating) to investigate was that it sat at the intersection of a bunch of different moving pieces.
Our code was technically wrong (relying on performance optimizations in the runtime isn&amp;rsquo;t especially safe).
Bazel did something incredibly unexpected (passing &lt;code&gt;-fstack-protector&lt;/code&gt; when I didn&amp;rsquo;t ask it to).
The Objective-C runtime has a performance optimization that does more than optimize (this is valid code under ARC, and yet it&amp;rsquo;s behavior is different from what ARC&amp;rsquo;s semantics say it should be).
And, finally, clang allows me to pass a compiler option that changes observable behavior, without documenting that it can do more than catch a small set of bugs.&lt;/p&gt;

&lt;p&gt;So, they say that it&amp;rsquo;s never a compiler bug. And in this case, it might not be a compiler bug.
But it sure is close to one.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A Boring Life</title>
    <link rel="alternate" href="http://blog.segiddins.me/2020/01/21/a-boring-life/"/>
    <id>http://blog.segiddins.me/2020/01/21/a-boring-life/</id>
    <published>2020-01-21T17:00:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I came across a tweet recently (it’s not that unusual these days). Someone was saying they wanted to get a KitchenAid (do it!) to be able to make homemade pizza dough, and said that this made them a boring adult now. It got me thinking, and then I wrote this.&lt;/p&gt;

&lt;p&gt;I’ve contemplated a lot about my life recently. Maybe it’s something to do with being 25. Maybe it’s because I’ve gotten to watch several people around me undertake significant life changes. Maybe it’s because I’m human and we’re prone to doing this sort of thing all the time. I don’t know.&lt;/p&gt;



&lt;p&gt;Anyways, some of that thinking has been in connection with talking. The sort of talking that happens whenever you see or call family, and you have to act out the same script over and over for the three billionth time, because of course your grandfather or uncle or mom’s childhood friend want to know how you are (or rather, they have to ask. they probably don’t actually want to know). Before I got a full-time job, this was actually a pretty fun script to follow. If I skipped enough conversations, there would be enough scheduled, structural changes in my life to fill out a thirty minute conversation and thus fullfil my duty as someone a generation or two younger than whoever was on the other end of the line.&lt;/p&gt;

&lt;p&gt;New quarter in school? Talk about the new classes! Complain about the professors! Say what you didn’t learn about the quarter before that you were expecting to learn! Lot’s of personal stuff to talk about that wasn’t really about &lt;em&gt;me&lt;/em&gt;, but rather was about the world around me. It was changing, and I could pass that off as the news in my life.&lt;/p&gt;

&lt;p&gt;But now? Sure, I completed another sprint at work. I do that every two weeks. But I’m not sure the NDA I signed even allows me to say the goofy sprint name we put in JIRA, much less talk about tickets and how they’re germane to the business and somehow convince myself that moving a label over a few pixels or filing some new Xcode bug to  was a worthy pursuit for a college-educated grandson. But even if I &lt;em&gt;could&lt;/em&gt; talk about it: who cares? Seriously. My manager barely gets through ten minutes of my weekly status updates, and he gets paid to listen! My aunt definitely doesn’t have the context necessary to talk about bazel build hermeticity (sure, that’s probably a word) and how it interacts with &lt;code&gt;actool&lt;/code&gt; and &lt;code&gt;.appiconset&lt;/code&gt; bundles, but I swear I can spend a whole week at work fighting that.&lt;/p&gt;

&lt;p&gt;I’m not complaining, of course. I get paid well for this and I largely enjoy it. But that’s 7-10 hours of the day, five days a week. Another  8-9 I spend sleeping (because I’m a boring adult now and don’t stay up until 4am watching Yu-Gi-Oh! reruns or playing smash any more). At least an hour is spend trying to transition myself from my bedroom to the rest of my apartment, and then back again (I’ve never been a morning person). I cook, and there’s only so many times you can talk about your 60th chicken soup of the year. Or the second night in a row making shameful mac n cheese because honestly hot cheese powder on carbs sounded good at the time.&lt;/p&gt;

&lt;p&gt;I watch the same TV shows, sitting on the same couch with the same person (yes, it probably is time for the third re-watch of Downton Abbey, just because it means I’ll drink more tea). Date nights happen at the same set of restaurants (again, with the same person. They’d want me to clarify that, I’m pretty sure). Remembering to vacuum and fold laundry is an accomplishment (one for me and the other for them).&lt;/p&gt;

&lt;p&gt;Writing all this down, it does sound kinda boring. And yet&amp;hellip;&lt;/p&gt;

&lt;p&gt;I can’t decide whether it’s a bad thing or not. Is it boring, or is it stable? I haven’t had to move apartments since graduating college. I’m saving money and don’t have debt (not my doing, really, so thank the family for that one). I get to buy the fancy Dyson vacuum on a whim and genuinely get pleasure from watching the dust behind the toilet dissappear (that was my one year vesting cliff present to myself, and I have no regrets). I went to four continents last year, and it’s become such a common occurence my mom gets upset when I forget to remind her that there’s another trip coming up (I swear I told her at least once. She admonishes me to forward her emails with my itinerary. I usually remember to do so before the first flight takes off). My partner and I went on an almost-two-week vacation to Australia because I found upgrade space on United (true story. We went via Houston for that). On that trip, we must’ve done at least four tasting menus, and didn’t worry about splurging too much. My parents complained they got more photos of the food than of me (this happens every trip, and I suppose I should be happy they still expect something different from me?) &lt;/p&gt;

&lt;p&gt;I think some of the feeling of &amp;ldquo;boring&amp;rdquo; is centered around not having answers for other people when they ask what’s happening in my life. Because I know that the answer will, to them, sound like &amp;ldquo;same old, same old&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;But to me, the person living that boring, adult life? I get to try out new recipes at home. Continue my search for adequate pizza on the left coast. Make progress in my career (even though the &amp;ldquo;L4 means software engineer, L5 also means software engineer. No I’m not a manager. Yet&amp;rdquo; conversation is hella old by now). Spend another year proving I’m not so intolerable that someone won’t be willing to (sometimes) share a living space with me. Spend time in other countries, and come home with renewed hope that the world can be different from the one I experience day-to-day. Read a lot of books (yes, a bunch were about baseball. yes, a bunch were about medieval england. yes, a bunch were about the world between 1930 and 1950. yes, a bunch identify me as woefully weak in jewish philosophy). Listened to too many podcasts (I know they sell mattresses on the internet now. I’m still not buying, but thanks for asking, Casper). Made more and more internet friends, at least one with each passing conference.&lt;/p&gt;

&lt;p&gt;In short (though I probably shouldn’t say this. I refuse to edit, and there’s still a few more miles left in this flight and I might continue to be verbose), I don’t know what I’d do differently. Is it boring? Is it adult? Maybe. Is it life? Absolutely, it’s my life. I’m reasonably happy with it, and I really can’t point at anything as being bad or wrong. Should I go to the gym more frequently? (Probably, just don’t ask me right after I’ve left it and everything is sore). Should I cut back on meat consumption because planet earth is dying? (Certainly, I have no excuses here). Should I spend more time being present with my partner instead of scrolling through the Hell Website? (Yeah, but the dumb tweets make for funny conversation a lot of the time). Should I call my grandparents more often? (I swerar I just called them mom, but no, don’t ask them about it). Should I care a bit less about finding sales on kitchen gadgets? (You can pry my AllClad and Shun out of my cold, dead hands).&lt;/p&gt;

&lt;p&gt;So I’m not perfect. Not close. But it’s not like these are major life decisions I want a do-over on. They’re tweaks. Small adjustments I just haven’t made because I’m weak, I’m human. I sin, I repent, the transgressions are forgiven. But they’re not regrets. I don’t regret the steak I had with my mom on Friday, because we had a good dinner together. I don’t regret working a bit on Sunday night after my dad went to bed, because I got some satisfaction out of making a new test suite pass. I don’t regret flying to Oslo last November, because I made some awesome new friends (turns out, staying out until 3am dancing and drinking beer is still a good bonding activity. Carry on). I don’t regret starting to go to the gym, nor the fact that I only go three times a week. I don’t regret the fact that I don’t own a house (then I’d have to feel bad about being gone so often). I don’t regret watching the Bread episodes of the Great British Bake Off over and over because I love bread, and watching it with my partner (a wooden cutting board of buttered bread on my coffee table) still makes me smile.&lt;/p&gt;

&lt;p&gt;(See, I told you the &amp;ldquo;in short&amp;rdquo; wouldn’t be short). I don’t really have a conclusion here. I guess I’m still trying to grapple with what an &amp;ldquo;adult life&amp;rdquo; is, what a &amp;ldquo;boring life&amp;rdquo; is, and what the hell I want &lt;strong&gt;my&lt;/strong&gt; life to be. All I know (ok, I know a lot. One thing I know) is that I have no regrets right now, and as long as that remains true, I think I’m doing OK. Whatever type of life you want to describe mine as, I like it. Bring the next year on.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Nagging</title>
    <link rel="alternate" href="http://blog.segiddins.me/2017/09/07/nagging/"/>
    <id>http://blog.segiddins.me/2017/09/07/nagging/</id>
    <published>2017-09-07T20:30:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;There are several different trains of thought when it comes to software &amp;ldquo;nagging&amp;rdquo; users about updates.
Naturally, I want to talk a bit about how this works in the open-source developer tools world.&lt;/p&gt;



&lt;p&gt;The spectrum of update nagging varies from &amp;ldquo;none&amp;rdquo; to &amp;ldquo;auto-updating&amp;rdquo;.
Homebrew, for example, auto-updates every so often whenever you run a &lt;code&gt;brew ...&lt;/code&gt; command.
It eschews releases, and basically makes staying on what you percieve as a &amp;ldquo;stable&amp;rdquo; version impossible.
On the other end of the spectrum, tools like &lt;code&gt;openssl&lt;/code&gt; will never tell you there&amp;rsquo;s a new version. You never get a &amp;ldquo;nag&amp;rdquo; to update, but you also never get a warning when major bugs are fixed (including those that could make your system vulnerable to attack).&lt;/p&gt;

&lt;p&gt;A couple of things I work on (CocoaPods, Bundler) have decided to chart a middling course. They never auto-update, but they&amp;rsquo;ll tell you when the version that&amp;rsquo;s running is out-of-date. I think this is the best of both worlds &amp;ndash; your development environment will never be silently changed without your consent, but you&amp;rsquo;ll also stay aware of new versions and be given an impetus to update.&lt;/p&gt;

&lt;p&gt;And keeping your tools up-to-date is &lt;strong&gt;important&lt;/strong&gt;. As someone who maintains lots of open source software, I can say with 100% confidence that &lt;em&gt;the only way to get support is to be on the latest version&lt;/em&gt;. Fixes usually don&amp;rsquo;t get backported, and my first response to an issue is almost always to ask &amp;ldquo;is this fixed with the latest release?&amp;rdquo; As a maintainer, I can&amp;rsquo;t help someone who doesn&amp;rsquo;t update. And the only route I have to get people to stay up-to-date is to advise them that there&amp;rsquo;s an update available.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Group of Friends</title>
    <link rel="alternate" href="http://blog.segiddins.me/2017/06/10/group-of-friends/"/>
    <id>http://blog.segiddins.me/2017/06/10/group-of-friends/</id>
    <published>2017-06-11T01:23:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Today, I watched my best friends graduate college. University of Chicago, class of 2017. Bachelors of Arts and Science. I&amp;rsquo;m just starting to appreciate just how lucky I was to have them. They were my first real group of friends.&lt;/p&gt;



&lt;p&gt;I met them the day I moved into my dorm. Saturday, September 22, 2013.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Andrew.&lt;br&gt;
Dan.&lt;br&gt;
Evan.&lt;br&gt;
Juliet.&lt;br&gt;
Katherine.&lt;br&gt;
Sam.&lt;br&gt;
Woody.&lt;br&gt;
Yida.  &lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve been through so much in the past four years, and I&amp;rsquo;m immensely proud of all of them. But even more than being just wonderful people in every way, they&amp;rsquo;ve become my family. As I&amp;rsquo;ve drifted further and further away from the people I grew up with in New York, they &lt;em&gt;collectively&lt;/em&gt; have come to fill that gap.&lt;/p&gt;

&lt;p&gt;We have bizarre traditions: Valois o&amp;#39;clock, Kuvia, John Handy. We&amp;rsquo;ve seen others come and go &amp;ndash; due to graduation or voluntary retirement from our whirlwind community. We&amp;rsquo;ve experienced enough drama for a lifetime. We&amp;rsquo;ve had late nights discussing career prospects, SOSC readings, relationship woes, strange YouTube videos, and nothing at all. But we&amp;rsquo;ve stuck together through it all. And today, I stayed in Hyde Park to watch them graduate, together. I even got in on one champagne-soaked photo. Because, even though I may technically be Class of 2018, they will forever be my UChicago family. And I was with them in spirit, if not in body, when President Big Bobby Z conferred upon them their degrees and pronounced them educated.&lt;/p&gt;

&lt;p&gt;Though it was bittersweet and emotional and generally difficult to see them graduate without me today, that isn&amp;rsquo;t to mean I have regrets over the path my life has taken. I&amp;rsquo;ve had many wondrous opportunities, have lived on my own, explored the world, and grown up. But part of that has meant leaving this newfound family behind. And now, they leave me behind. (Albeit only for a short while, I&amp;rsquo;ll be graduating very soon myself.) I can&amp;rsquo;t imagine UChicago without them &amp;ndash; fall quarter will be very strange.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve discovered how amazing it is to have a cohesive group of friends. A group of people who share an immense repertoire of jokes, memories both painful and joyous, incredibly odd tastes, and a zeal for each others company. They&amp;rsquo;ve seen me at my highs and lows, and I&amp;rsquo;ve seen them struggle and triumph as one only can in college. We&amp;rsquo;ve all gone through different relationships. Different internships. Different majors. But we&amp;rsquo;ve shared four years of our lives.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Now, we scatter.&lt;br&gt;
But they will always remain my closest group of friends from college.&lt;br&gt;
I love them all immensely.&lt;br&gt;
They&amp;rsquo;re my family.&lt;br&gt;
They&amp;rsquo;re Salisbury.  &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Never Again</title>
    <link rel="alternate" href="http://blog.segiddins.me/2017/01/28/never-again/"/>
    <id>http://blog.segiddins.me/2017/01/28/never-again/</id>
    <published>2017-01-29T02:20:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I grew up hearing the phrase &amp;ldquo;never again&amp;rdquo;. As a young Jewish boy, those two words embodied how I understood justice. It meant that we&amp;rsquo;d learn from the atrocities of the past, and do my part to ensure they wouldn&amp;rsquo;t happen on my watch.&lt;/p&gt;

&lt;p&gt;Right now, that very idea of justice is under attack.&lt;/p&gt;



&lt;p&gt;Last year, I visited four cities in Europe that used a have large Jewish communities. Berlin, Amsterdam, Prague, and Budapest. In every one of them, I spent a day visiting historic synagogues and graveyards and museums. Not just because they represented my heritage, but because the people whose lives they represented were no longer around to speak for themselves. They were murdered in the Shoah.&lt;/p&gt;

&lt;p&gt;Instead of museums and memorials, there should have been living people. Singing, dancing, praying, arguing, working, living people. But there were only stories and relics.&lt;/p&gt;

&lt;p&gt;I sit now, at home in Chicago, and the feeling I&amp;rsquo;ve been trying to resist since August of 2015 is becoming impossible to resist any longer. The world is under attack. Sure, it always has been in some sense, but right now the danger is more real and palpable than any other time I can recall in my 22 years on this Earth. Fascism and Nazi is no longer just a specter haunting is. It is our frightening reality. Today, the President unilaterally attacked Americans solely on the basis of where they were born. People are being held at airports, unable to return home. And our leaders are largely silent.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s been eight days of Trump presidency, and we&amp;rsquo;re already at the &amp;ldquo;first he came for the Muslims&amp;rdquo; part. And we all know how this ends.&lt;/p&gt;

&lt;p&gt;I will not be complicit in bigotry, racism, xenophobia, nor hatred. I will not let my silence stand as tacit endorsement for what is happening around me. I will not let others use parts of my identity to justify hatred. I will not stand idly by as injustice is committed.&lt;/p&gt;

&lt;p&gt;I will not allow myself to wait until I can visit museums recognizing the atrocities this administration has promised. I will not allow them to erase the Shoah from history, as they attempted to do yesterday. I will not live in a world where there are memorials to those exterminated &amp;ndash; because I refuse to live to see that happen.&lt;/p&gt;

&lt;p&gt;First they came for the weak, the vulnerable, those who look different, dress different, speak different, worship different.&lt;/p&gt;

&lt;p&gt;And I said &lt;strong&gt;never again&lt;/strong&gt; to their hatred.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>עֵל חֵטְא</title>
    <link rel="alternate" href="http://blog.segiddins.me/2016/10/12/%D7%A2%D6%B5%D7%9C%2520%D7%97%D6%B5%D7%98%D6%B0%D7%90/"/>
    <id>http://blog.segiddins.me/2016/10/12/%D7%A2%D6%B5%D7%9C%2520%D7%97%D6%B5%D7%98%D6%B0%D7%90/</id>
    <published>2016-10-12T18:00:00Z</published>
    <updated>2024-02-09T20:47:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;These ten days between Rosh Hashanah and Yom Kippur are supposed to be about repentance for transgressions against other people. Yom Kippur is only about atonement for sins against god (or yourself, depending on your understand of things). It’s so cathartic to just write out the things you’ve done in a year you’re sorry for, and to let people know that you want their forgiveness.&lt;/p&gt;

&lt;p&gt;In that vein, &lt;em&gt;al cheyt&lt;/em&gt;:&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;For the sin of not calling my sick aunt often enough.&lt;/li&gt;
&lt;li&gt;For the sin of not visiting my dying uncle.&lt;/li&gt;
&lt;li&gt;For the sin of pretending to be asleep to avoid difficult conversations.&lt;/li&gt;
&lt;li&gt;For the sin of not texting my sisters.&lt;/li&gt;
&lt;li&gt;For the sin of giving my father a hard time, even when he&amp;rsquo;s tried his best.&lt;/li&gt;
&lt;li&gt;For the sin of lazily handwaving on homework to save a few minutes,&lt;/li&gt;
&lt;li&gt;For the sin of piling onto twitter bandwagons.&lt;/li&gt;
&lt;li&gt;For the sin of using sarcasm as a substitute for humor.&lt;/li&gt;
&lt;li&gt;For the sin of trying to be funny instead of compassionate.&lt;/li&gt;
&lt;li&gt;For the sin of enjoying myself instead of taking care of others.&lt;/li&gt;
&lt;li&gt;For the sin of bragging at my own accomplishments, instead of praising others.&lt;/li&gt;
&lt;li&gt;For the sin of wallowing in self-pity, even when things are going well.&lt;/li&gt;
&lt;li&gt;For the sin of being in-authentic online or around friends.&lt;/li&gt;
&lt;li&gt;For the sin of ignoring tradition for the sake of convenience.&lt;/li&gt;
&lt;li&gt;For the sin of laughing at times I should have cried.&lt;/li&gt;
&lt;li&gt;For the sin of abandoning principle to save face.&lt;/li&gt;
&lt;li&gt;For the sin of staying silent in the face of others&amp;rsquo; oppression.&lt;/li&gt;
&lt;li&gt;For the sin of looking too hard at numbers instead of people.&lt;/li&gt;
&lt;li&gt;For the sin of not forgiving those who have seen the error of their ways.&lt;/li&gt;
&lt;li&gt;For the sin of not speaking up when I hear people being mis-gendered.&lt;/li&gt;
&lt;li&gt;For the sin of setting my goals too high, even though it will mean a burden on others.&lt;/li&gt;
&lt;li&gt;For the sin of not taking care of myself, and being grumpy about it.&lt;/li&gt;
&lt;li&gt;For the sin of letting others waste hours so I can save minutes.&lt;/li&gt;
&lt;li&gt;For the sin of not doing my part to achieve &lt;em&gt;tikkun olam&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;For the sin of willful ignorance for the sake of momentary bliss.&lt;/li&gt;
&lt;li&gt;For the sin of knowing all these transgressions, yet waiting until today to atone.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is my litany of woe. May I have a chance to be better in the new year.&lt;/p&gt;

&lt;p&gt;.שנה טובה‎‎&lt;/p&gt;
</content>
  </entry>
</feed>
